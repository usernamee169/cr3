'''
HomeDyn14. К-ичные числа. Среди чисел в системе счисления с основанием K (2≤K≤10)
определить сколько имеется чисел из N (1<N<20, N+K<26) разрядов таких, что в их
записи содержится два и более подряд идущих нулей.

 Языковая модель: https://chatgptchatapp.com
'''

def solve():
    """Решает задачу HomeDyn14: находит количество K-ичных чисел из N разрядов,
    содержащих два или более подряд идущих нуля.
    """

    K = int(input("Введите основание системы счисления K (2 <= K <= 10): "))
    N = int(input("Введите количество разрядов N (1 < N < 20, N + K < 26): "))

    total_numbers = K**N  # Общее количество N-значных K-ичных чисел

    # Вычисляем количество N-значных K-ичных чисел, не содержащих двух подряд идущих нулей
    valid_numbers = count_valid_numbers(N, K)

    # Количество чисел, содержащих два и более подряд идущих нуля
    result = total_numbers - valid_numbers

    print("Количество K-ичных чисел из N разрядов с двумя и более подряд идущими нулями:", result)


def count_valid_numbers(N, K):
    """Подсчитывает количество N-значных K-ичных чисел, не содержащих двух подряд идущих нулей.

    Args:
        N: Количество разрядов.
        K: Основание системы счисления.

    Returns:
        Количество допустимых чисел.
    """
    if N == 0:
        return 1
    if N == 1:
        return K

    # dp[i][0] - количество чисел длины i, заканчивающихся не-нулем
    # dp[i][1] - количество чисел длины i, заканчивающихся нулем

    dp = [[0, 0] for _ in range(N + 1)]
    dp[1][0] = K - 1
    dp[1][1] = 1

    for i in range(2, N + 1):
        dp[i][0] = (dp[i - 1][0] + dp[i - 1][1]) * (K - 1)
        dp[i][1] = dp[i - 1][0]

    return dp[N][0] + dp[N][1]


# Запускаем решение
solve()