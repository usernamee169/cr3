'''
HomeDyn14. К-ичные числа. Среди чисел в системе счисления с основанием K (2≤K≤10)
определить сколько имеется чисел из N (1<N<20, N+K<26) разрядов таких, что в их
записи содержится два и более подряд идущих нулей.

Языковая модель: https://giga.chat
'''

def count_numbers_with_two_zeros(K, N):
    MOD = 10**9 + 7  # Используется для предотвращения переполнения больших чисел
    
    # Массив dp: dp[n][state], state = 0/1 (предыдущий символ не-ноль или ноль соответственно)
    dp = [[0]*2 for _ in range(N)]
    
    # Начальные условия: первая цифра не ноль
    dp[0][0] = K - 1  # Может быть любая цифра от 1 до K-1
    dp[0][1] = 1      # Одна комбинация, начинающаяся с нуля
    
    # Динамическое заполнение массива dp
    for i in range(1, N):
        # Если предыдущий символ не ноль
        dp[i][0] = (dp[i-1][0] * (K-1)) % MOD  # Следующая цифра не ноль
        dp[i][0] += dp[i-1][1] * (K-1)         # Последняя цифра предыдущего шага была ноль, теперь ставим любую отличную от нуля
        
        # Если предыдущий символ ноль
        dp[i][1] = dp[i-1][0]                  # Можно поставить только одну цифру (ноль), чтобы получить два нуля подряд
        
    # Суммируем количество правильных чисел (без пар подряд идущих нулей)
    total_valid = sum(dp[N-1]) % MOD
    
    # Всего возможных чисел K^n
    total_possible = pow(K, N, MOD)
    
    # Количество чисел с двумя и более подряд идущими нулями
    answer = (total_possible - total_valid) % MOD
    
    return answer

# Пример использования
K = 3
N = 4
result = count_numbers_with_two_zeros(K, N)
print(result)
